import numpy as np
import joblib

# Load the trained model and encoders
knn = joblib.load('knn_model.pkl')
label_encoder = joblib.load('label_encoder.pkl')
preprocessor = joblib.load('preprocessor.pkl')

# Function to predict labels for new values and handle matched/unmatched
def predict_labels_and_handle_indices(values_list, indices_list):
    matched_values = []
    non_matched_values = []
    matched_indices = []
    non_matched_indices = []

    # Preprocess new values
    values_df = pd.DataFrame({'value': values_list})
    values_processed = preprocessor.transform(values_df)

    for value, index, processed_value in zip(values_list, indices_list, values_processed):
        try:
            # Predict the label for the processed value
            prediction = knn.predict([processed_value])
            predicted_label = label_encoder.inverse_transform(prediction)[0]
            matched_values.append(predicted_label)
            matched_indices.append(index)
        except Exception as e:
            # If prediction fails, add to non-matched lists
            non_matched_values.append(value)
            non_matched_indices.append(index)

    return (matched_values, matched_indices), (non_matched_values, non_matched_indices)

# Example usage
values_list = ['USA', 'success', 'unknown_value']  # Replace with your list of new values
indices_list = [0, 1, 2]  # Replace with corresponding indices

(matched_values, matched_indices), (non_matched_values, non_matched_indices) = predict_labels_and_handle_indices(values_list, indices_list)

# Print the results
print("Matched Values:", matched_values)
print("Matched Indices:", matched_indices)
print("Non-Matched Values:", non_matched_values)
print("Non-Matched Indices:", non_matched_indices)
