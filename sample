from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

# Preprocess the 'value' column with handle_unknown='ignore'
preprocessor = ColumnTransformer(
    transformers=[
        ('cat', OneHotEncoder(handle_unknown='ignore'), ['value'])
    ],
    remainder='passthrough'
)

X_processed = preprocessor.fit_transform(X)

# Save the preprocessor
joblib.dump(preprocessor, 'preprocessor.pkl')




def predict_labels_and_handle_indices(values_list, indices_list):
    matched_values = []
    non_matched_values = []
    matched_indices = []
    non_matched_indices = []

    # Preprocess new values
    values_df = pd.DataFrame({'value': values_list})
    values_processed = preprocessor.transform(values_df)

    for value, index, processed_value in zip(values_list, indices_list, values_processed):
        if value not in preprocessor.named_transformers_['cat'].categories_[0]:
            non_matched_values.append(value)
            non_matched_indices.append(index)
            continue

        try:
            # Predict the label for the processed value
            prediction = knn.predict([processed_value])
            predicted_label = label_encoder.inverse_transform(prediction)[0]
            matched_values.append(predicted_label)
            matched_indices.append(index)
        except Exception as e:
            # If prediction fails, add to non-matched lists
            non_matched_values.append(value)
            non_matched_indices.append(index)

    return (matched_values, matched_indices), (non_matched_values, non_matched_indices)
